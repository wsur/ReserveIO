// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReserveIO.Models;

#nullable disable

namespace ReserveIO.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20240516060036_AddLast1")]
    partial class AddLast1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReserveIO.Models.CostHour", b =>
                {
                    b.Property<int>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostId"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("CostRoomId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStampTZ")
                        .HasColumnType("datetime2");

                    b.HasKey("CostId");

                    b.HasIndex("CostRoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("CostHour");

                    b.HasData(
                        new
                        {
                            CostId = 1,
                            Cost = 2500,
                            CostRoomId = 1,
                            TimeStampTZ = new DateTime(2024, 5, 16, 11, 0, 36, 364, DateTimeKind.Local).AddTicks(8984)
                        },
                        new
                        {
                            CostId = 2,
                            Cost = 2500,
                            CostRoomId = 1,
                            TimeStampTZ = new DateTime(2024, 5, 16, 11, 0, 36, 364, DateTimeKind.Local).AddTicks(8995)
                        },
                        new
                        {
                            CostId = 3,
                            Cost = 2500,
                            CostRoomId = 2,
                            TimeStampTZ = new DateTime(2024, 5, 16, 11, 0, 36, 364, DateTimeKind.Local).AddTicks(8997)
                        },
                        new
                        {
                            CostId = 4,
                            Cost = 2500,
                            CostRoomId = 3,
                            TimeStampTZ = new DateTime(2024, 5, 16, 11, 0, 36, 364, DateTimeKind.Local).AddTicks(8997)
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Delete = false,
                            RoleName = "Lessee"
                        },
                        new
                        {
                            RoleId = 2,
                            Delete = false,
                            RoleName = "Lessor"
                        },
                        new
                        {
                            RoleId = 3,
                            Delete = false,
                            RoleName = "App_Owner"
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("OnOff")
                        .HasColumnType("bit");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ServiceOn")
                        .HasColumnType("bit");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            OnOff = true,
                            RoomName = "Plank",
                            ServiceOn = true
                        },
                        new
                        {
                            RoomId = 2,
                            OnOff = true,
                            RoomName = "Newtone",
                            ServiceOn = true
                        },
                        new
                        {
                            RoomId = 3,
                            OnOff = true,
                            RoomName = "Einstein",
                            ServiceOn = true
                        },
                        new
                        {
                            RoomId = 4,
                            OnOff = true,
                            RoomName = "Gilbert",
                            ServiceOn = true
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<float>("ServiceCost")
                        .HasColumnType("real");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            ServiceCost = 3000f,
                            ServiceName = "аренда офисного помещения 30 кв под митапы",
                            UserId = 2
                        },
                        new
                        {
                            ServiceId = 2,
                            ServiceCost = 10000f,
                            ServiceName = "Аренда магазинной площади под городское мероприятие 400 кв",
                            UserId = 2
                        },
                        new
                        {
                            ServiceId = 3,
                            ServiceCost = 10000f,
                            ServiceName = "тест моего помещения",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.ServiceInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReserveId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("SummaryTableSummaryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReserveId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("SummaryTableSummaryId");

                    b.ToTable("ServiceInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReserveId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReserveId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            ReserveId = 3,
                            ServiceId = 3
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.SummaryTable", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryId"));

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LesseeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SummaryId");

                    b.HasIndex("LesseeId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("SummaryTables");

                    b.HasData(
                        new
                        {
                            SummaryId = 1,
                            Datetime = new DateTime(2024, 5, 16, 11, 0, 36, 369, DateTimeKind.Local).AddTicks(3121),
                            EndTime = new DateTime(2024, 5, 13, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            LesseeId = 2,
                            RoomId = 2
                        },
                        new
                        {
                            SummaryId = 2,
                            Datetime = new DateTime(2024, 5, 16, 11, 0, 36, 369, DateTimeKind.Local).AddTicks(3205),
                            EndTime = new DateTime(2024, 5, 13, 16, 40, 0, 0, DateTimeKind.Unspecified),
                            LesseeId = 2,
                            RoomId = 1
                        },
                        new
                        {
                            SummaryId = 3,
                            Datetime = new DateTime(2024, 5, 16, 11, 0, 36, 369, DateTimeKind.Local).AddTicks(3213),
                            EndTime = new DateTime(2024, 5, 13, 16, 50, 0, 0, DateTimeKind.Unspecified),
                            LesseeId = 3,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 23,
                            Delete = false,
                            Name = "Tom"
                        },
                        new
                        {
                            Id = 2,
                            Age = 26,
                            Delete = false,
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 3,
                            Age = 28,
                            Delete = false,
                            Name = "Sam"
                        },
                        new
                        {
                            Id = 4,
                            Age = 24,
                            Delete = false,
                            Name = "Eugene"
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.UserLogPass", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogPasses");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Login = "Tom1",
                            Password = "123"
                        },
                        new
                        {
                            UserId = 2,
                            Login = "Alice1",
                            Password = "123"
                        },
                        new
                        {
                            UserId = 3,
                            Login = "Sam1",
                            Password = "123"
                        },
                        new
                        {
                            UserId = 4,
                            Login = "Eugene1",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.UserRoom", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("UserRoom");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoomId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoomId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoomId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("ReserveIO.Models.CostHour", b =>
                {
                    b.HasOne("ReserveIO.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("CostRoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction);
                });

            modelBuilder.Entity("ReserveIO.Models.Service", b =>
                {
                    b.HasOne("ReserveIO.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.ClientNoAction);
                });

            modelBuilder.Entity("ReserveIO.Models.ServiceInfo", b =>
                {
                    b.HasOne("ReserveIO.Models.SummaryTable", null)
                        .WithMany()
                        .HasForeignKey("ReserveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.SummaryTable", null)
                        .WithMany()
                        .HasForeignKey("SummaryTableSummaryId");
                });

            modelBuilder.Entity("ReserveIO.Models.SummaryTable", b =>
                {
                    b.HasOne("ReserveIO.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LesseeId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction);
                });

            modelBuilder.Entity("ReserveIO.Models.UserLogPass", b =>
                {
                    b.HasOne("ReserveIO.Models.User", null)
                        .WithOne()
                        .HasForeignKey("ReserveIO.Models.UserLogPass", "UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ReserveIO.Models.UserRole", b =>
                {
                    b.HasOne("ReserveIO.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("ReserveIO.Models.UserRoom", b =>
                {
                    b.HasOne("ReserveIO.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("ReserveIO.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
